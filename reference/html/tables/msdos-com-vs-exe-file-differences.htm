<!DOCTYPE HTML>
<html><head><meta charset="utf-8"><title>COM vs EXE file differences</title></head><body><h2><span style="border-bottom: double;">COM vs EXE file differences</span></h2><table style="border: 1px solid black; border-spacing: 0px;"><tr style="background-color: rgb(224,224,224);"><th style="border-right: 1px solid black; padding: 0.2em; padding-right: 1em; border-bottom: 1px solid black; font-size: 0.9em; text-align: left;">Item</th><th style="border-right: 1px solid black; padding: 0.2em; padding-right: 1em; border-bottom: 1px solid black; font-size: 0.9em; text-align: left;">COM Programs</th><th style="padding: 0.2em; padding-right: 1em; border-bottom: 1px solid black; font-size: 0.9em; text-align: left;">EXE Programs</th></tr><tr valign="top"><td style="white-space: pre; padding: 0.2em; padding-right: 1em; font-size: 0.9em; text-align: left; border-right: 1px solid black; border-bottom: 1px solid black;">CS at entry</td><td style="white-space: pre; padding: 0.2em; padding-right: 1em; font-size: 0.9em; text-align: left; border-right: 1px solid black; border-bottom: 1px solid black;">PSP</td><td style="white-space: pre; padding: 0.2em; padding-right: 1em; font-size: 0.9em; text-align: left; border-bottom: 1px solid black;">Segment containing module with entry point</td></tr><tr valign="top"><td style="white-space: pre; padding: 0.2em; padding-right: 1em; font-size: 0.9em; text-align: left; border-right: 1px solid black; border-bottom: 1px solid black;">DS at entry</td><td style="white-space: pre; padding: 0.2em; padding-right: 1em; font-size: 0.9em; text-align: left; border-right: 1px solid black; border-bottom: 1px solid black;">PSP</td><td style="white-space: pre; padding: 0.2em; padding-right: 1em; font-size: 0.9em; text-align: left; border-bottom: 1px solid black;">PSP</td></tr><tr valign="top"><td style="white-space: pre; padding: 0.2em; padding-right: 1em; font-size: 0.9em; text-align: left; border-right: 1px solid black; border-bottom: 1px solid black;">Entry point</td><td style="white-space: pre; padding: 0.2em; padding-right: 1em; font-size: 0.9em; text-align: left; border-right: 1px solid black; border-bottom: 1px solid black;">PSP:0x100</td><td style="white-space: pre; padding: 0.2em; padding-right: 1em; font-size: 0.9em; text-align: left; border-bottom: 1px solid black;">EXE header initial CS:IP values</td></tr><tr valign="top"><td style="white-space: pre; padding: 0.2em; padding-right: 1em; font-size: 0.9em; text-align: left; border-right: 1px solid black; border-bottom: 1px solid black;">ES at entry</td><td style="white-space: pre; padding: 0.2em; padding-right: 1em; font-size: 0.9em; text-align: left; border-right: 1px solid black; border-bottom: 1px solid black;">PSP</td><td style="white-space: pre; padding: 0.2em; padding-right: 1em; font-size: 0.9em; text-align: left; border-bottom: 1px solid black;">PSP</td></tr><tr valign="top"><td style="white-space: pre; padding: 0.2em; padding-right: 1em; font-size: 0.9em; text-align: left; border-right: 1px solid black; border-bottom: 1px solid black;">IP at entry</td><td style="white-space: pre; padding: 0.2em; padding-right: 1em; font-size: 0.9em; text-align: left; border-right: 1px solid black; border-bottom: 1px solid black;">0x100</td><td style="white-space: pre; padding: 0.2em; padding-right: 1em; font-size: 0.9em; text-align: left; border-bottom: 1px solid black;">Offset of entry point within it&apos;s segment</td></tr><tr valign="top"><td style="white-space: pre; padding: 0.2em; padding-right: 1em; font-size: 0.9em; text-align: left; border-right: 1px solid black; border-bottom: 1px solid black;">Maximum program size</td><td style="white-space: pre; padding: 0.2em; padding-right: 1em; font-size: 0.9em; text-align: left; border-right: 1px solid black; border-bottom: 1px solid black;">65278</td><td style="white-space: pre; padding: 0.2em; padding-right: 1em; font-size: 0.9em; text-align: left; border-bottom: 1px solid black;">No limit</td></tr><tr valign="top"><td style="white-space: pre; padding: 0.2em; padding-right: 1em; font-size: 0.9em; text-align: left; border-right: 1px solid black; border-bottom: 1px solid black;">Memory allocation</td><td style="white-space: pre; padding: 0.2em; padding-right: 1em; font-size: 0.9em; text-align: left; border-right: 1px solid black; border-bottom: 1px solid black;">All free memory is allocated to the program</td><td style="white-space: pre; padding: 0.2em; padding-right: 1em; font-size: 0.9em; text-align: left; border-bottom: 1px solid black;">All free memory, or the maximum allocation size specified in the EXE header
whichever is smaller.</td></tr><tr valign="top"><td style="white-space: pre; padding: 0.2em; padding-right: 1em; font-size: 0.9em; text-align: left; border-right: 1px solid black; border-bottom: 1px solid black;">Segment use</td><td style="white-space: pre; padding: 0.2em; padding-right: 1em; font-size: 0.9em; text-align: left; border-right: 1px solid black; border-bottom: 1px solid black;">One segment only</td><td style="white-space: pre; padding: 0.2em; padding-right: 1em; font-size: 0.9em; text-align: left; border-bottom: 1px solid black;">Multiple segments allowed</td></tr><tr valign="top"><td style="white-space: pre; padding: 0.2em; padding-right: 1em; font-size: 0.9em; text-align: left; border-right: 1px solid black; border-bottom: 1px solid black;">Size of file</td><td style="white-space: pre; padding: 0.2em; padding-right: 1em; font-size: 0.9em; text-align: left; border-right: 1px solid black; border-bottom: 1px solid black;">Exact size of program not including PSP</td><td style="white-space: pre; padding: 0.2em; padding-right: 1em; font-size: 0.9em; text-align: left; border-bottom: 1px solid black;">Size of program plus EXE header</td></tr><tr valign="top"><td style="white-space: pre; padding: 0.2em; padding-right: 1em; font-size: 0.9em; text-align: left; border-right: 1px solid black; border-bottom: 1px solid black;">SP at entry</td><td style="white-space: pre; padding: 0.2em; padding-right: 1em; font-size: 0.9em; text-align: left; border-right: 1px solid black; border-bottom: 1px solid black;">0xFFFE, or top word of available memory, whichever is lower</td><td style="white-space: pre; padding: 0.2em; padding-right: 1em; font-size: 0.9em; text-align: left; border-bottom: 1px solid black;">EXE header, initial SP segment value</td></tr><tr valign="top"><td style="white-space: pre; padding: 0.2em; padding-right: 1em; font-size: 0.9em; text-align: left; border-right: 1px solid black; border-bottom: 1px solid black;">SS at entry</td><td style="white-space: pre; padding: 0.2em; padding-right: 1em; font-size: 0.9em; text-align: left; border-right: 1px solid black; border-bottom: 1px solid black;">PSP</td><td style="white-space: pre; padding: 0.2em; padding-right: 1em; font-size: 0.9em; text-align: left; border-bottom: 1px solid black;">EXE header, initial SS segment value</td></tr><tr valign="top"><td style="white-space: pre; padding: 0.2em; padding-right: 1em; font-size: 0.9em; text-align: left; border-right: 1px solid black; border-bottom: 1px solid black;">Stack at entry</td><td style="white-space: pre; padding: 0.2em; padding-right: 1em; font-size: 0.9em; text-align: left; border-right: 1px solid black; border-bottom: 1px solid black;">Zero word on stack</td><td style="white-space: pre; padding: 0.2em; padding-right: 1em; font-size: 0.9em; text-align: left; border-bottom: 1px solid black;">Initialized or uninitialized data</td></tr><tr valign="top"><td style="white-space: pre; padding: 0.2em; padding-right: 1em; font-size: 0.9em; text-align: left; border-right: 1px solid black; border-bottom: 1px solid black;">Stack size</td><td style="white-space: pre; padding: 0.2em; padding-right: 1em; font-size: 0.9em; text-align: left; border-right: 1px solid black; border-bottom: 1px solid black;">65536 - (ProgramSize + 256)</td><td style="white-space: pre; padding: 0.2em; padding-right: 1em; font-size: 0.9em; text-align: left; border-bottom: 1px solid black;">Size of stack segment.
If assembly language programming, size of the STACK segment</td></tr><tr valign="top"><td style="white-space: pre; padding: 0.2em; padding-right: 1em; font-size: 0.9em; text-align: left; border-right: 1px solid black;">Subroutine calls</td><td style="white-space: pre; padding: 0.2em; padding-right: 1em; font-size: 0.9em; text-align: left; border-right: 1px solid black;">NEAR CALLs only</td><td style="white-space: pre; padding: 0.2em; padding-right: 1em; font-size: 0.9em; text-align: left;">NEAR or FAR CALLS allowed</td></tr>
</table><p><span style="border-bottom: solid; border-bottom-width: thin;">Sources</span></p>
<table style="font-size: 0.8em;"><tr valign="top"><td style="padding-left: 2em; padding-bottom: 1em;" id="msdos-com-vs-exe-file-differences_source_0"><sup style="color: rgb(0,0,192);"><i>[*0]</i></sup></td><td style="padding-bottom: 1em;">The Programmer&apos;s PC Sourcebook, Thom Hogan, Microsoft Press, 1988<br>Part 2, Software =&gt; Section 2, DOS Commands, Utilities, and Summaries =&gt; 2.44, COM Verses EXE File Differences<br></td></tr></table><p><span style="border-bottom: solid; border-bottom-width: thin;">Notes</span></p><ul style="font-size: 0.8em;"><li>The 65278 COM program size limit is based on:
65536 - 256 byte Program Segment Prefix - 2 byte stack</li><li>PC Programmer&apos;s Sourcebook (1988) incorrectly states the entry point is determined by END segment. It is actually determined by an initial CS:IP value in the EXE header</li><li>PC Programmer&apos;s Sourcebook (1988) refers to the initial SS segment at entry in terms of assembly language programming, in which the segment defined with the STACK attribute becomes the stack. This compilation refers to the initial value according to the EXE header instead. The initial value of SP in the book is defined as the size of the STACK segment.</li><li>PSP = Program Segment Prefix</li><li>NEAR CALLs in COM files is more of a limitation of assemblers in MS-DOS. If you are willing to lay out memory on your own, you can certainly have segments in a COM file, and FAR calls. However COM files do not have a relocation table, so any relocations have to be manually done somehow to get the same function.</li><li>The EXE header specifies how much to load, which can be less than the size of the EXE file. Additional data can be placed beyond that point which is then ignored by MS-DOS when loading the EXE file into memory. This is widely used to carry additional data with an executable file, including self-extracting PKZIP archives (ZIP archive appended to an EXE). The Windows executable file format exploits this to place a PE or NE header beyond the MS-DOS &quot;stub&quot;, so that if a Windows program is ever run in MS-DOS mode, only the small stub is loaded into memory so it can remind you to run it from Windows.</li></ul></body></html>