command,param,dspver,card,effect,comments,return,__suppress
0x10,nn,1.0+,,"Direct write 8-bit DAC","Data is 8-bit unsigned format.",,SUPPRESS(THIS=comments)
0x11,lo hi,,"ESS AudioDrive","Direct write 16-bit DAC","Data is 16-bit unsigned format, first low byte then high byte."
0x14,lo hi,1.0+,,"Start normal mode DMA for 8-bit DAC transfer","Data is transfer count - 1, least byte first. Stereo DAC transfer if stereo flag is set in Mixer register 0Eh. Maximum sample rate is 44 kHz mono, 22 kHz stereo."
0x15,lo hi,,"ESS AudioDrive","Start normal mode DMA for 16-bit DAC transfer","Data is transfer count - 1, least byte first. Stereo DAC transfer if stereo flag is set in Mixer register 0EH. Maximum sample rate is 22 kHz mono, 11 kHz stereo."
0x1C,,2.0+,,"Start auto-initialize mode DMA for 8-bit DAC transfer","Block size must be previously set by command 48h. Stereo DAC transfer if stereo flag is set in Mixer register 0Eh. Maximum sample rate is 44 kHz mono, 22 kHz stereo."
0x1D,,,"ESS AudioDrive","Start auto-initialize mode DMA for 16-bit DAC transfer","Block size must be previously set by command 48h. Stereo DAC transfer if stereo flag is set in Mixer register 0Eh. Maximum sample rate is 22 kHz mono, 11 kHz stereo."
0x20,,1.0+,,"Direct mode 8-bit ADC","Data is 8-bit unsigned. Firmware controlled input volume for AGC.",sample
0x21,,,"ESS AudioDrive","Direct mode 16-bit ADC","Returns least byte first. Data is 16-bit unsigned format. Input volume controlled by command DDh.",lo hi
0x24,lo hi,1.0+,,"Start normal mode DMA for 8-bit ADC transfer","Data is transfer count - 1, least byte first. Firmware controlled input volume for AGC. Maximum sample rate is 22 kHz: use command 99h for higher rates up to 44 kHz."
0x25,lo hi,,"ESS AudioDrive","Start normal mode DMA for 16-bit ADC transfer","Data is transfer count - 1, least byte first. Input volume controlled via command DDh. Maximum sample rate is 22 kHz."
0x2C,,2.0+,,"Start auto-initialize mode DMA for 8 bit ADC transfer","Block size must be previously set by command 48h. Firmware controlled input volume for AGC. Maximum sample rate is 22 kHz: use command 98h for higher rates up to 44 kHz."
0x2D,,,"ESS AudioDrive","Start auto-initialize mode DMA for 16-bit ADC transfer","Block size must be previously set by command 48h. Input volume is controlled by command DDh. Maximum sample rate is 22 kHz."
0x40,nn,1.0+,,"Set time constant","Set time constant, X, for timer used for DMA mode DAC/ADC transfers: rate = 1 MHz / (256-X) X must be less than or equal to 233. For stereo DAC, program sample rate for twice the per-channel rate."
0x41,nn,,"ESS AudioDrive","Alternate set time constant","Alternate set time constant, X: rate = 1.5 MHz / (256-X)\n\nThis command provides more accurate timing for certain rates such as 22,050. X must be less than equal to 222. For stereo DAC, program sample rate for twice the per-channel rate."
0x42,nn,,"ESS AudioDrive","Set filter clock independently of timer rate","Set filter clock independently of timer rate. (note that the filter clock is automatically set by commands 40h/41h) Filter clock rate: rate = 7.16E6 / (256-X)\n\nThe relationship between the low-pass filter -3 dB point and the filter clock rate is approximately 1:82."
0x48,lo hi,2.0+,,"Set block size","Set block size-1 for high speed mode and auto-init mode transfer, least byte first."
0x64,lo hi,,"ESS AudioDrive","Start ESPCM® 4.3-bit (low compression) format DMA transfer to DAC","Data is transfer count - 1, least byte first."
0x65,lo hi,,"ESS AudioDrive","Start ESPCM® 4.3-bit (low compression) format DMA transfer to DAC with reference byte","Data is transfer count - 1, least byte first."
0x66,lo hi,,"ESS AudioDrive","Start ESPCM® 3.4-bit (medium compression) format DMA transfer to DAC","Data is transfer count - 1, least byte first."
0x67,lo hi,,"ESS AudioDrive","Start ESPCM® 3.4-bit (medium compression) format DMA transfer to DAC with reference byte","Data is transfer count - 1, least byte first."
0x6A,lo hi,,"ESS AudioDrive","Start ESPCM® 2.5-bit (high compression) format DMA transfer to DAC","Data is transfer count - 1, least byte first."
0x6B,lo hi,,"ESS AudioDrive","Start ESPCM® 2.5-bit (high compression) format DMA transfer to DAC with reference byte","Data is transfer count - 1, least byte first."
0x6E,lo hi,,"ESS AudioDrive","Start ESPCM® 4.3-bit (low compression) format ADC, compression, and DMA transfer","Data is transfer count - 1, least byte first."
0x6F,lo hi,,"ESS AudioDrive","Start ESPCM® 4.3-bit (low compression) format ADC, compression, and DMA transfer with reference byte","Data is transfer count - 1, least byte first."
0x74,lo hi,1.0+,,"Start ADPCM 4-bit format DMA transfer to DAC","Data is transfer count - 1, least byte first."
0x75,lo hi,1.0+,,"Start ADPCM 4-bit format DMA transfer to DAC with reference byte","Data is transfer count - 1, least byte first."
0x76,lo hi,1.0+,,"Start ADPCM 2.6-bit format DMA transfer to DAC","Data is transfer count - 1, least byte first."
0x77,lo hi,1.0+,,"Start ADPCM 2.6-bit format DMA transfer to DAC with reference byte","Data is transfer count - 1, least byte first."
0x7A,lo hi,,"ESS AudioDrive","Start ADPCM 2-bit format DMA transfer to DAC","Data is transfer count - 1, least byte first.\nFIXME: Verify on real hardware, this should be Sound Blaster auto-init 2.6/4-bit ADPCM. May be error."
0x7B,lo hi,,"ESS AudioDrive","Start ADPCM 2-bit format DMA transfer to DAC with reference byte","Data is transfer count - 1, least byte first.\nFIXME: Verify on real hardware, this should be Sound Blaster auto-init 2.6/4-bit ADPCM. May be error."
0x80,lo hi,1.0+,,"Generate silence period","Data is number of samples - 1."
0x90,,,"ESS AudioDrive","Start auto-initialize DMA 8-bit transfer to DAC","Transfer count must be previously set by command 48h."
0x91,,,"ESS AudioDrive","Start DMA 8-bit transfer to DAC","Transfer count must be previously set by command 48h."
0x98,,,"ESS AudioDrive","Start high speed mode, auto-initialize, DMA 8-bit transfer from ADC","Transfer count must be previously set by command 48h. There is no AGC. Input volume is controlled with command DDh. Maximum sample rate is 44 kHz."
0x99,,,"ESS AudioDrive","Start high speed mode, DMA 8-bit transfer from ADC","Transfer count must be previously set by command 48h. There is no AGC. Input volume is controlled with command DDh. Maximum sample rate is 44 kHz."
0xA0,,,"ESS AudioDrive","Unspecified (Extended register)",""
0xA1,,,"ESS AudioDrive","Sample Rate Generator register (Extended register)","Bit 7: 1=Clock source is 795.5 kHz 0=Clock source is 397.7 kHz\nBits 6-0: Sample rate divider\n\nSample_Rate = 397.7 kHz / (128-x) if bit 7 = 0.\nSample_Rate = 795.5 kHz / (256-x) if bit 7 = 1.\nwhere: x = value in bits 7:0 of register A1h."
0xA2,,,"ESS AudioDrive","Filter Clock Divider register (Extended register)","This register controls the low-pass frequency of the switch-capacitor filters inside the ES1878. Generally, the filter roll-off should be positioned at 80% - 90% of the Sample_Rate/2 frequency. The ratio of the roll-off frequency to the filter clock frequency is 1:82. In other words, first determine the desired roll-off frequency by taking 80% of the Sample_Rate divided by 2, then multiply by 82 to find the desired Filter Clock frequency. Use the formula below to determine the closest divider:\n\nFilter_Clock_Frequency = 7.16 MHz / (256-Filter_Divider_Register)"
0xA3,,,"ESS AudioDrive","Unspecified (Extended register)",""
0xA4,,,"ESS AudioDrive","Transfer Count Reload register – low byte (Extended register)","On reset, this register assumes the value of 00h. Low byte of 16-bit value in port A5h,A4h. See port A5h"
0xA5,,,"ESS AudioDrive","Transfer Count Reload register – high byte (Extended register)","On reset, this register assumes the value of F8h. The FIFO control logic of the ES1878 has a 16-bit counter for controlling transfers to and from the FIFO. These registers are the reload value for that counter which is the value that gets copied into the counter after each overflow (plus at the beginning of the initial DMA transfer). The counter will be incremented after each successful byte is transferred via DMA. Since the counter counts up towards FFFFh and then overflows, the reload value is in 2’s complement form.\n\nFor Auto-Initialize DMA, the counter is used to generate interrupt requests to the system processor: in this mode DMA continues indefinitely as far as the ES1878 is concerned. In a typical application the counter is programmed to be one-half of the DMA buffer maintained by the system processor. In this case an interrupt is generated whenever DMA switches from one half of the circular buffer to the other.\n\nFor Normal Mode DMA, DMA requests will be halted at the time that the counter overflows, until a new DMA transfer is commanded by the system processor. Again, an interrupt request will be generated to the system processor if bit 6 of register B1 is set high."
0xA6,,,"ESS AudioDrive","Unspecified (Extended register)",""
0xA7,,,"ESS AudioDrive","Unspecified (Extended register)",""
0xA8,,,"ESS AudioDrive","Unspecified (Extended register)",""
0xA9,,,"ESS AudioDrive (ES1868)","Mic Preamp (Extended register)","Bit 7-3: Reserved\nBit 2: Enable Mic Preamp\nBit 1-0: Reserved\n\nAll other bits must first be read and preserved when writing to this register."
0xAA,,,"ESS AudioDrive","Unspecified (Extended register)",""
0xAB,,,"ESS AudioDrive","Unspecified (Extended register)",""
0xAC,,,"ESS AudioDrive","Unspecified (Extended register)",""
0xAB,,,"ESS AudioDrive","Unspecified (Extended register)",""
0xAE,,,"ESS AudioDrive","Unspecified (Extended register)",""
0xAF,,,"ESS AudioDrive","Unspecified (Extended register)",""
0xB0,,,"ESS AudioDrive","Unspecified (Extended register)",""
0xB1,,,"ESS AudioDrive","Interrupt Control register (Extended register)","Bit 7: Processor IRQ, reserved for compatibility and should be zero for Extended mode (ES1868)\nBit 6: Enable IRQ on DMA counter overflow\nBit 5: Enable IRQ on FIFO Half-Empty transitions when doing block I/O to/from the FIFO in Extended Mode\nBit 4: x, Bit 4 of Extended register B1h is don't-care, not the interrupt enable control. The audio device activate bit serves the purpose of enabling the interrupt pin.\nBit 3-0: Read only, encodes audio interrupt: 0=IRQ 2,9,others 5=IRQ 5 10=IRQ 7 15=IRQ 10"
0xB2,,,"ESS AudioDrive","DRQ Control register (Extended register)","Bit 7: Processor DRQ, Reserved for Compatibility Mode; should be left zero for Extended Mode.\nBit 6: Enable DRQ for extended DMA. 1=Enable DRQ outputs and DACKB inputs for DMA transfers in Extended Mode. 0=Enable block I/O to/from the FIFO in Extended Mode.\nBit 5: Enable DRQ for compatibility mode, should be left zero for Extended Mode.\nBit 4: x, Bit 4 of register B2h is don't-care. The DRQ lines always drive there is no enable). If neither bit 6 or 5 are set high, the 1st audio DRQ is always low.\nBits 3-0: Read only, encodes audio DMA channel: 0=all others 5=DMA 0 10=DMA 1 15=DMA 3"
0xB3,,,"ESS AudioDrive","Unspecified (Extended register)",""
0xB4,,,"ESS AudioDrive","Input Volume Control register / Record Level (Extended register)","Bits 7-4: Left channel record level\nBits 3-0: Right channel record level\n\nES1868: This register is not explicitly listed but implicitly shown in diagrams for various PCM formats"
0xB5,,,"ESS AudioDrive","DAC Direct Access register – low byte (Extended register)","Low byte of DAC direct access holding register. Because the bus between the ISA bus and the FIFO is only 8 bits wide, the ES1879 needs a location for storage of 16-bit data. Registers B5h and B6h serve this function.\n\nES1868: The datasheet only hints at this register"
0xB6,,,"ESS AudioDrive","DAC Direct Access register – high byte (Extended register)","High byte of DAC direct access holding register. Because the bus between the ISA bus and the FIFO is only 8 bits wide, the ES1879 needs a location for storage of 16-bit data. Registers B5h and B6h serve this function.\n\nES1868: The datasheet only hints at this register"
0xB7,,,"ESS AudioDrive","Control 1 register / Audio 1 Control 1 (Extended register)","Bit 7: Enable FIFO to/from codec\nBit 6: Set opposite bit 3 - Reserved function. This bit must be set to the opposite polarity of bit 3: high for mono and low for stereo.\nBit 5: FIFO signed mode - 1 = First DMA FIFO 2’s complement mode (signed data). 0 = First DMA FIFO unsigned (offset 8000)\nBit 4: Reserved (1)\nBit 3: FIFO stereo mode - 1 = First DMA FIFO stereo mode. 0 = First DMA FIFO mono mode. Bit 6 must be set at the opposite polarity of this bit: high for mono, low for stereo.\nBit 2: FIFO 16-bit mode - 1 = First DMA FIFO 16-bit mode. 0 = First DMA FIFO 8-bit mode.\nBit 1: Reserved (0)\nBit 0: Generate load signal - Write 1. Generates a load signal that copies DAC Direct Access Holding register to DAC on the next sample rate clock edge (sample rate is determined by Extended mode register A1h). This bit is cleared after the holding register is copied to the DAC.\n\nES1868: This register is only hinted at in the datasheet"
0xB8,,,"ESS AudioDrive","Control 2 register / Audio 1 Control 2 (Extended register)","Bits 7-4: Reserved (0)\nBit 3: CODEC mode - 1 = first DMA converters in ADC mode. 0 = first DMA converters in DAC mode.\nBit 2: DMA mode - 1 = Auto-Initialize DMA mode. 0 = Normal DMA mode.\nBit 1: DMA read enable - 1 = first DMA is read (e.g., for ADC operation). 0 = first DMA is write (e.g., for DAC operation)\nBit 0: DMA transfer enable - First DMA active-low reset. When low, first DMA is allowed to proceed.\n\nES1868: This register is only hinted at in the datasheet"
0xB9,,,"ESS AudioDrive","Transfer Type register / Audio 1 Transfer Type (Extended register)","Bits 7-2: Reserved (0)\nBits 1:0 DMA transfer type - 0=single 1=Demand (2 bytes) 2=Demand (4 bytes) 3=Reserved\n\nES1868: This register is only hinted at in the datasheet"
0xBA,,,"ESS AudioDrive","Unnamed (ES1868) / Left Channel ADC Offset Adjust (ES1879) (Extended register)","Bit 7: Reserved(0)\nBit 6 (ES1868 only) Enable SR ADJ: The ES1868 includes this feature of the ES1888 that adjusts the sample rates for more accuracy. 1= Cause the 14.31818 MHz cock to be adjusted slightly to make the 44.1 kHz sample rate (and integral divisions of that rate) nearly exact. This bit is cleared by hardware reset.\nBit 5: Disable time delay on analog wake up - Normally, the AOUT_L and AOUT_R pins are muted for 100 milliseconds ± 20 milliseconds after hardware reset or after the analog subsystems wake from power-down. This delay can be disabled by setting bit 5. This bit is cleared by hardware reset.\nBit 4-0 (ES1868): Reserved (0)\nBit 4-0 (ES1879): Sign/Adjust magnitude for left channel, see register BBh"
0xBB,,,"ESS AudioDrive","Unspecified (ES1868) / Right Channel ADC Offset Adjust (ES1879) (Extended register)","Bits 7-5 (ES1879): Reserved (0)\nBits 4-0 (ES1879): Sign/Adjust magnitude\n\nRegister does not exist on ES1868.\nBits 4 (sign) and 3:0 (adjust magnitude) of the ADC Offset Adjust register cause a constant value to be added to the ADC converter output according to:\nbit 4 = 0: offset = 64 * bits[3:0]\nbit 4 = 1: offset = -64 * (bits[3:0] + 1)"
0xBC,,,"ESS AudioDrive","Unamed (ES1868) / Unspecified (ES1879) (Extended register)","Bits 7-6 (ES1868): FM DAC volume - 0=-1.5dB 1=+1.5dB 2=0dB 3=-3dB\nBits 5-0 (ES1868): 0x36 (binary 110110)\n\nRegister not documented or does not exist on ES1879"
0xBD,nn,,"ESS AudioDrive (ES1868)","Self-Timed Power-Down","If nn is nonzero, hardware will automatically power down after nn * 8 seconds.\nIf nn is zero, self-timed power-down is disabled"
0xBE,,,"ESS AudioDrive","Unspecified (Extended register)",""
0xBF,,,"ESS AudioDrive","Unspecified (Extended register)",""
0xC0,nn,,"ESS AudioDrive","Read ESS extended register","Read from register specified by nn, where nn is a value from 0xA0-0xBF inclusive corresponding to an extended ESS register",val
0xC1,,,"ESS AudioDrive","Resume after suspend",""
0xC6,,,"ESS AudioDrive","Enable ES1868 Extension commands Axh, Bxh. Must be issued after every reset.",""
0xC7,,,"ESS AudioDrive","Disable ES1868 Extension commands Axh, Bxh.",""
0xCE,,,"ESS AudioDrive","Read GPO0/1 Power Management register","",nn
0xCF,nn,,"ESS AudioDrive","Write GPO/1 Power Management register",""
0xD0,,1.0+,,"Pause DMA","Internal FIFO operations will continue until the FIFO is empty (DAC transfer) or full (ADC transfer). It is not necessary to use this command to stop DMA if the transfer is completed normally and the end-of-DMA interrupt is generated."
0xD1,,1.0+,,"Enable voice DAC input to mixer.",""
0xD3,,1.0+,,"Disable voice DAC input to mixer.",""
0xD4,,1.0+,,"Continue DMA after command D0h.",""
0xD5,,,"ESS AudioDrive","ESS488 command compatibility","For compatibility with the ES488, always returns “1”.",nn
0xD6,,,"ESS AudioDrive","ESS488 command compatibility","ES488 command not supported by ES1868. Use mixer registers instead."
0xD7,nn,,"ESS AudioDrive","ESS488 command compatibility","ES488 command not supported by ES1868. Use mixer registers instead."
0xD8,,2.0+,,"Return voice DAC enable status","0=disabled 0xFF=enabled",nn
0xDC,,,"ESS AudioDrive","Return current input gain, 0-15, (valid during 16-bit ADC and 8-bit “high speed mode” ADC).","",nn
0xDD,nn,,"ESS AudioDrive","Write current input gain, 0-15, (valid during 16-bit ADC and 8-bit “high speed mode” ADC).",""
0xDE,,,"ESS AudioDrive","ESS488 command compatibility","ES488 command not supported by ES1868. Use mixer registers instead."
0xDF,nn,,"ESS AudioDrive","ESS488 command compatibility","ES488 command not supported by ES1868. Use mixer registers instead."
0xE1,,1.0+,,"Return version number high","ESS1868: high (3), followed by version number low (1). This indicates Sound Blaster Pro compatibility.",hi lo
0xE7,,,"ESS AudioDrive","ES1868 Identification bytes","Returns ES1868 Identification bytes: 68h 8xh, where x is the version code. Sound cards not using an ES1868 will either ignore this command or perform an unknown function, in which case the sound card should be reset after this command is used. The version code, x, is less than 8 for the ES688, and greater than or equal to 8 for the ES1868.",id1 id2
0xF2,,1.0+,,"Generate an interrupt for test purposes",""
0xFD,,,"ESS AudioDrive","Force power-down","Forces power-down. Software or hardware reset. Required for wake-up."

