command,param,dspver,card,effect,comments,return
0x00-0x03,,2.0,Sound Blaster 2.0,No op,"Command group 0 (status) according to sbv202.asm which does nothing but return to command processing, if bit 2 and 3 are clear."
0x04-0x07,,2.0-3.xx,"Sound Blaster 2.0\nSound Blaster Pro",Return status register,"Undocumented command, returns status register (sbv202.asm), if bit 2 set, bit 3 clear.",status
0x08-0x0F,,2.0,Sound Blaster 2.0,cmd_halt,"Undocumented command at cmd_halt (sbv202.asm), if bit 3 is set. Puts the DSP into an infinite loop."
0x10-0x13,nn,2.0,Sound Blaster 2.0,cmd_dac_direct,"DSP command 10h, and aliases that exist due to processing at cmdg_dac_e (sbv202.asm) when neither bit 2 or 3 are set in the command"
0x14-0x15,lo hi,2.0,Sound Blaster 2.0,cmd_dac_dma,"DSP command 14h, and aliases that exist due to processing at cmdg_dac_e (sbv202.asm) when bit 2 set, bit 3 clear, in the command\nNote that there is code in vanilla DOSBox that acknowledges this alias that is used in one DOS game known as 'Wari'"
0x18-0x19 0x1C-0x1D,,2.0,Sound Blaster 2.0,cmd_dac_autoinit,"DSP command 1Ch, and aliases that exist due to processing at cmdg_dac_e (sbv202.asm) when bit 3 is set, then at X078e when bit 1 is clear"
0x1A 0x1E,,2.0,Sound Blaster 2.0,cmd_dac_dma_use_adpcm_2,"DSP command 1Fh, and aliases, at cmd_dac_dma_use_adpcm_2 (sbv202.asm) when bit 3 and 1 are set. This undocumented version does not read a reference byte"
0x1B 0x1F,,2.0,Sound Blaster 2.0,cmd_dac_dma_use_adpcm_2,"DSP command 1Fh, and aliases, at cmd_dac_dma_use_adpcm_2 (sbv202.asm) when bit 3 and 1 are set."
0x20-0x23,,2.0,Sound Blaster 2.0,cmd_adc_direct,"DSP command 20h, and aliases that exist due to processing at cmdg_adc_e (sbv202.asm) when neither bit 2 or 3 are set in the command",sample
0x24-0x27,lo hi,2.0,Sound Blaster 2.0,cmd_adc_dma,"DSP command 24h, and aliases that exist due to processing at cmdg_adc_e (sbv202.asm) when bit 2 set, bit 3 clear, in the command"
0x28-0x2F,,2.0,Sound Blaster 2.0,cmd_dac_autoinit_direct,"DSP command 2Ch, and aliases that exist due to processing at cmdg_adc_e (sbv202.asm) when bit 3 set"
0x30,,1.0+,,cmd_midi_read_write_poll,"sbv202.asm: DSP reset will cancel the MIDI command without clearing DSP state.\nInternal DSP firmware handles 0x30-0x33 and 0x34-0x37 using the same processing loop that changes behavior slightly based on bits in the command byte.",midibyte
0x31,,1.0+,,cmd_midi_read_write_poll,"sbv202.asm: DSP reset will cancel the MIDI command without clearing DSP state.\nInternal DSP firmware handles 0x30-0x33 and 0x34-0x37 using the same processing loop that changes behavior slightly based on bits in the command byte."
0x32,,1.0+,,cmd_midi_read_write_poll,"Undocumented, sbv202.asm: Alias of 30h, but also returns MIDI timestamp\nDSP reset will cancel the MIDI command without clearing DSP state.\nInternal DSP firmware handles 0x30-0x33 and 0x34-0x37 using the same processing loop that changes behavior slightly based on bits in the command byte.",tl tm th midibyte
0x33,,1.0+,,cmd_midi_read_write_poll,"Undocumented, sbv202.asm: Alias of 31h, but also returns MIDI timestamp\nsbv202.asm: DSP reset will cancel the MIDI command without clearing DSP state.\nInternal DSP firmware handles 0x30-0x33 and 0x34-0x37 using the same processing loop that changes behavior slightly based on bits in the command byte."
0x34,,2.0+,,cmd_midi_read_write_poll,"sbv202.asm: DSP reset will cancel the MIDI command without clearing DSP state.\nInternal DSP firmware handles 0x30-0x33 and 0x34-0x37 using the same processing loop that changes behavior slightly based on bits in the command byte."
0x35,,2.0+,,cmd_midi_read_write_poll,"sbv202.asm: DSP reset will cancel the MIDI command without clearing DSP state.\nInternal DSP firmware handles 0x30-0x33 and 0x34-0x37 using the same processing loop that changes behavior slightly based on bits in the command byte."
0x36,,2.0+,,cmd_midi_read_write_poll,"sbv202.asm: DSP reset will cancel the MIDI command without clearing DSP state.\nInternal DSP firmware handles 0x30-0x33 and 0x34-0x37 using the same processing loop that changes behavior slightly based on bits in the command byte."
0x37,,2.0+,,cmd_midi_read_write_poll,"sbv202.asm: DSP reset will cancel the MIDI command without clearing DSP state.\nInternal DSP firmware handles 0x30-0x33 and 0x34-0x37 using the same processing loop that changes behavior slightly based on bits in the command byte."
0x38-0x3F,nn,2.0,Sound Blaster 2.0,cmd_midi_write_poll,"DSP command 38h, and aliases due to processing at do_midi_cmd (sbv202.asm) when bit 3 set"
0x40-0x47,tc,2.0,Sound Blaster 2.0,cmdg_setup_e,"DSP command 40h, and aliases due to processing at cmdg_setup_e (sbv202.asm) when bit 3 clear"
0x48-0x4F,lo hi,2.0,Sound Blaster 2.0,cmd_set_dma_block_size,"DSP command 48h, and aliases due to processing at cmdg_setup_e (sbv202.asm) when bit 3 set"
0x50 0x52 0x54 0x56,,2.0,Sound Blaster 2.0,Stop SRAM playback (cmdg_ram_playback_e),"Undocumented, part of the SRAM playback group (sbv202.asm), when bit 0 and 3 are clear"
0x51 0x53 0x55 0x57,,2.0,Sound Blaster 2.0,Play samples in SRAM (cmd_ram_playback),"Undocumented, part of the SRAM playback group (sbv202.asm), when bit 0 set, bit 3 clear"
0x58-0x5F,nrs lc1 lc2 un sample...,2.0,Sound Blaster 2.0,Load data into SRAM (cmd_ram_load),"Undocumented, part of the SRAM playback group (sbv202.asm), when bit 3 set\nnrs = Number of RAM samples times two\nPlayback loop count 1 and 2 = lc1 lc2\nun = Unused?\nsample... = zero or more sample bytes to load according to nrs\n\nIf bit 0 of the command is set (0x59, 0x5B, 0x5D, 0x5F), playback from SRAM begins immediately after loading samples."
0x70 0x78 0x7C,,2.0,Sound Blaster 2.0,4-bit ADPCM auto-init DMA mode (cmd_dac_autoinit_adpcm),"Undocumented, alias of command 0x7C (sbv202.asm), when bit 3 is set, or bit 2 and 3 are clear.\nThe alias occurs because of a bug in the DSP firmware where if neither bit 2 or 3 are set, it takes the auto-init code path anyway"
0x71 0x79,,2.0,Sound Blaster 2.0,4-bit ADPCM auto-init DMA mode with reference byte (cmd_dac_autoinit_adpcm),"Alias of command 0x7D (sbv202.asm), when bit 3 is set, or bit 2 and 3 are clear.\nThe alias occurs because of a bug in the DSP firmware where if neither bit 2 or 3 are set, it takes the auto-init code path anyway"
0x72 0x7A 0x7E,,2.0,Sound Blaster 2.0,2.6-bit ADPCM auto-init DMA mode (cmd_dac_autoinit_adpcm),"Undocumented, alias of command 0x7E (sbv202.asm), when bit 3 is set, or bit 2 and 3 are clear.\nThe alias occurs because of a bug in the DSP firmware where if neither bit 2 or 3 are set, it takes the auto-init code path anyway"
0x73 0x7B,,2.0,Sound Blaster 2.0,2.6-bit ADPCM auto-init DMA mode with reference byte (cmd_dac_autoinit_adpcm),"Alias of command 0x7F (sbv202.asm), when bit 3 is set, or bit 2 and 3 are clear.\nThe alias occurs because of a bug in the DSP firmware where if neither bit 2 or 3 are set, it takes the auto-init code path anyway"
0x80-0x8F,,2.0,Sound Blaster 2.0,Generate silence (cmdg_silence_e),"Alias of command 0x80 (sbv202.asm), mapped to group 8. Bits 3:0 are ignored."
0x92 0x94 0x96,,2.0,Sound Blaster 2.0,High speed single cycle playback (cmdg_hs_e),"Alias of command 0x90 (sbv202.asm) when bit 3 is clear. The command sets a flag indicating high speed mode, which affects how the timer interrupt within the DSP handles playback."
0x93 0x95 0x97,,2.0,Sound Blaster 2.0,High speed auto-init playback (cmdg_hs_e),"Alias of command 0x91 (sbv202.asm) when bit 3 is clear. The command sets a flag indicating high speed mode, which affects how the timer interrupt within the DSP handles playback."
0x9A 0x9C 0x9E,,2.0,Sound Blaster 2.0,High speed single cycle recording (cmdg_hs_e),"Alias of command 0x98 (sbv202.asm) when bit 3 is set. The command sets a flag indicating high speed mode, which affects how the timer interrupt within the DSP handles recording."
0x9B 0x9D 0x9F,,2.0,Sound Blaster 2.0,High speed auto-init recording (cmdg_hs_e),"Alias of command 0x99 (sbv202.asm) when bit 3 is set. The command sets a flag indicating high speed mode, which affects how the timer interrupt within the DSP handles recording."
0x60-0x6F 0xA0-0xAF 0xB0-0xBF 0xC0-0xCF,,2.0,Sound Blaster 2.0,Unimplemented (cmdg_invalid),"Command does nothing (sbv202.asm), groups 6, A, B, and C not implemented.\nHowever the 8051 assembly listing seems to imply a firmware bug where, if the sound card is playing audio, nothing happens, but if the sound card is not playing audio, execution continues into group 0 and handled as if command 0x00-0x0F which suggests that sending 68h, A8h, B8h, or C8h when idle should halt the DSP."
0xD4-0xD7 0xDC-0xDF,,2.0,Sound Blaster 2.0,Continue DMA operation (cmd_dma_continue),"Alias of command 0xD4 (sbv202.asm) when bit 2 is set"
0xD8-0xD9,,2.0,Sound Blaster 2.0,Speaker status (cmd_spk_stat),"Alias of command 0xD8 (sbv202.asm) when bit 2 is not set and bit 3 is set",nn
0xDA-0xDB,,2.0,Sound Blaster 2.0,Exit auto-init DMA operation (cmd_exit_autoinit),"Alias of command 0xDA (sbv202.asm)"
0xD0-0xD1,,2.0,Sound Blaster 2.0,Enable speaker (cmd_speaker_en_dis),"Alias of command 0xD1 (sbv202.asm)"
0xD2-0xD3,,2.0,Sound Blaster 2.0,Disable speaker (cmd_speaker_en_dis),"Alias of command 0xD3 (sbv202.asm)"
0xE8-0xEF,,2.0,Sound Blaster 2.0,Read test register (cmd_read_test_reg),"Read test register and aliases (sbv202.asm) when bit 3 is set",nn
0xE4-0xE7,nn,2.0,Sound Blaster 2.0,Write test register (cmd_write_test_reg),"Write test register and aliases (sbv202.asm) when bit 3 clear and bit 2 set"
0xE3,nn,2.0,Sound Blaster 2.0,Firmware validation check (cmd_dsp_dma_id),"Alias of command 0xE2 (sbv202.asm) when bits 3 and 2 clear and bit 1 set"
0xE2,nn,2.0+,,Firmware validation check (cmd_dsp_dma_id),"Undocumented (sbv202.asm). nn is a challenge byte, which is then combined with the dsp_dma_id bytes and returned via DMA.\nOn DSP reset:\n\ndsp_dma_id0 = 0xAA\ndsp_dma_id1 = 0x96\n\nThen:\n\ndsp_dma_id0 += dsp_dma_id1 XOR nn\nrotate dsp_dma_id1 2 bits to the right\n\nAfter this calculation, dsp_dma_id0 is sent to the host over DMA.\nIn addition to validating that it is Creative hardware, or a clone that supports this command, this command is also handy for testing whether the DMA channel to the card is working as expected.\n\nThis DSP command may also work on Sound Blaster Pro and even SB16. It is unknown whether DSP 1.xx implements this command."
0xE1,,1.0+,,Get DSP version number,"cmd_dsp_version",hi lo
0xE0,nn,2.0,Sound Blaster 2.0,DSP identification (cmd_ident_e),"Undocumented (sbv202.asm), accepts byte nn, inverts all 8 bits, returns result which is equiv. (nn ^ 0xFF)",cmpnn
0xF8-0xFF,,2.0,Sound Blaster 2.0,SRAM test (cmd_sram_test),"Undocumented (sbv202.asm). Tests SRAM by writing and verifying 0xAA, then 0x55, to every byte from 0x7F to (wraparound) 0x00. Returns 0 for success or the byte that failed",result
0xF4-0xF7,,2.0,Sound Blaster 2.0,Perform ROM checksum (cmd_checksum),"Undocumented (sbv202.asm). Computes 16-bit checksum (addition) from DSP memory address 0x0000h to 0x1000. May contain bug, see sbv202.asm for details",hi lo
0xF3,,2.0,Sound Blaster 2.0,Force interrupt (cmd_force_interrupt),"Alias of command 0xF2 (sbv202.asm)"
0xF2,,1.0+,,Force interrupt,"Causes the DSP to signal an interrupt. This can be used to check that the interrupt associated with the card works properly and is the correct one."
0xF1,,2.0,Sound Blaster 2.0,Get auxiliary status (cmd_aux_status),"Undocumented (sbv202.asm).\nOn the SB 2.0 the bits are assigned as follows:\nBit 7: 1=Mailbox data available for the 8051 to read\nBit 6: 1=Mailbox data available for the PC to read\nBit 5: Analog comparator bit for recording modes\nBit 4:1 reserved\nBit 0: 1=speaker muted 0=speaker enabled",status
0xF0,,1.0-3.xx,,Sine generator (cmd_sine_gen),"Undocumented (sbv202.asm). Causes the DSP to play a 64-sample sine wave sample stored in ROM"

